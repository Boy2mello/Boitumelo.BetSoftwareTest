/*
Deployment script for BetSoftwareDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BetSoftwareDB"
:setvar DefaultFilePrefix "BetSoftwareDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[Address]...';


GO
CREATE TABLE [dbo].[Address] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [UserID]   INT           NOT NULL,
    [Address1] VARCHAR (250) NOT NULL,
    [Address2] VARCHAR (250) NULL,
    [Address3] VARCHAR (250) NULL,
    [Country]  VARCHAR (100) NULL,
    [City]     VARCHAR (100) NULL,
    [Town]     VARCHAR (100) NULL,
    [AreaCode] VARCHAR (20)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Brand]...';


GO
CREATE TABLE [dbo].[Brand] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [BrandDescription] VARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContactDetails]...';


GO
CREATE TABLE [dbo].[ContactDetails] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [UserID]        INT           NULL,
    [ContactTypeId] INT           NULL,
    [Contact]       VARCHAR (250) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContactType]...';


GO
CREATE TABLE [dbo].[ContactType] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [ContactType] VARCHAR (250) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Order]...';


GO
CREATE TABLE [dbo].[Order] (
    [Id]               INT  IDENTITY (1, 1) NOT NULL,
    [ShippingMethodId] INT  NOT NULL,
    [SalesPersonId]    INT  NOT NULL,
    [CustomerId]       INT  NOT NULL,
    [OrderDate]        DATE NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[OrderDetail]...';


GO
CREATE TABLE [dbo].[OrderDetail] (
    [Id]        INT        IDENTITY (1, 1) NOT NULL,
    [OrderId]   INT        NOT NULL,
    [ProductId] INT        NOT NULL,
    [Quantity]  INT        NOT NULL,
    [UnitPrice] FLOAT (53) NOT NULL,
    [Discount]  FLOAT (53) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Payment]...';


GO
CREATE TABLE [dbo].[Payment] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [OrderId]        INT           NOT NULL,
    [PaymentId]      INT           NOT NULL,
    [PaymentAmount]  FLOAT (53)    NOT NULL,
    [PaymentDate]    DATETIME      NOT NULL,
    [CardNumber]     VARCHAR (10)  NOT NULL,
    [CardExpiryDate] DATE          NOT NULL,
    [CardHolderName] VARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [BrandId]     INT           NOT NULL,
    [ProductName] VARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ShippingMethod]...';


GO
CREATE TABLE [dbo].[ShippingMethod] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [ShippingMethod] VARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Title]       VARCHAR (10) NULL,
    [FirstName]   VARCHAR (50) NULL,
    [LastName]    VARCHAR (50) NULL,
    [DateOfBirth] DATE         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[UserType]...';


GO
CREATE TABLE [dbo].[UserType] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [UserType] VARCHAR (250) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[sp_DeleteAddress]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteAddress]	
	@Id int
AS
BEGIN
	DELETE FROM [dbo].[Address] where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteBrands]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteBrands]
	@Id int
AS
BEGIN
	DELETE FROM [dbo].[Brand] where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteContactDetails]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteContactDetails]
	@Id INT
AS
BEGIN
	DELETE FROM [dbo].[ContactDetails] WHERE Id = @ID
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteContactTypes]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteContactTypes]
	@Id INT
AS
BEGIN
	DELETE FROM [dbo].[ContactType] 	
	WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteOrderDetails]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteOrderDetails]
	@Id INT 
AS
BEGIN
	DELETE FROM [dbo].[OrderDetail] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteOrders]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteOrders]
	@Id INT
AS
BEGIN
	SELECT * FROM [dbo].[Order]  WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeletePayments]...';


GO

CREATE PROCEDURE [dbo].[sp_DeletePayments]
    @Id INT
AS
BEGIN
	DELETE FROM [dbo].[Payment] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteProducts]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteProducts]	
	@Id INT
AS
BEGIN
	DELETE FROM [dbo].[Product] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteShippingMethods]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteShippingMethods]
	@Id int
AS
BEGIN
	DELETE FROM [dbo].[ShippingMethod] where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteUsers]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteUsers]
	@Id INT
AS
BEGIN
	DELETE FROM [dbo].[User] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_DeleteUserTypes]...';


GO

CREATE PROCEDURE [dbo].[sp_DeleteUserTypes]
	@Id int
AS
BEGIN
	DELETE FROM [dbo].[UserType] where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetAddress]...';


GO
CREATE PROCEDURE [dbo].[sp_GetAddress]	
AS
BEGIN
	SELECT * FROM [dbo].[Address]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetAddressById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetAddressById]	
	@Id int
AS
BEGIN
	SELECT * FROM [dbo].[Address] where UserId = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetAddressByUserId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetAddressByUserId]	
	@UserId int
AS
BEGIN
	SELECT * FROM [dbo].[Address] where UserId = @UserId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetBrands]...';


GO
CREATE PROCEDURE [dbo].[sp_GetBrands]
AS
BEGIN
	SELECT * FROM [dbo].[Brand]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetBrandsById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetBrandsById]
	@Id int
AS
BEGIN
	SELECT * FROM [dbo].[Brand] where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetContactDetails]...';


GO
CREATE PROCEDURE [dbo].[sp_GetContactDetails]	
AS
BEGIN
	SELECT * FROM [dbo].[ContactDetails]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetContactDetailsById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetContactDetailsById]
	@Id INT
AS
BEGIN
	SELECT * FROM [dbo].[ContactDetails] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetContactDetailsByUserId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetContactDetailsByUserId]
	@UserId INT
AS
BEGIN
	SELECT * FROM [dbo].[ContactDetails] WHERE Id = @UserId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetContactTypes]...';


GO
CREATE PROCEDURE [dbo].[sp_GetContactTypes]
AS
BEGIN
	SELECT * FROM [dbo].[ContactType]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetContactTypesById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetContactTypesById]
	@Id INT
AS
BEGIN
	SELECT * FROM [dbo].[ContactType] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrderDetails]...';


GO
CREATE PROCEDURE [dbo].[sp_GetOrderDetails]
AS
BEGIN
	SELECT * FROM [dbo].[OrderDetail]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrderDetailsById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetOrderDetailsById]
	@Id INT 
AS
BEGIN
	SELECT * FROM [dbo].[OrderDetail] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrderDetailsByOrderId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetOrderDetailsByOrderId]
	@OrderId INT 
AS
BEGIN
	SELECT * FROM [dbo].[OrderDetail] WHERE OrderId = @OrderId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrderDetailsByProductId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetOrderDetailsByProductId]
	@ProductId INT 
AS
BEGIN
	SELECT * FROM [dbo].[OrderDetail] WHERE ProductId = @ProductId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrders]...';


GO
CREATE PROCEDURE [dbo].[sp_GetOrders]
AS
BEGIN
	SELECT * FROM [dbo].[Order]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrdersByCustomerId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetOrdersByCustomerId]
	@CustomerId INT
AS
BEGIN
	SELECT * FROM [dbo].[Order]  WHERE CustomerId = @CustomerId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrdersById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetOrdersById]
	@Id INT
AS
BEGIN
	SELECT * FROM [dbo].[Order] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrdersBySalesPersonId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetOrdersBySalesPersonId]
	@SalesPersonId INT
AS
BEGIN
	SELECT * FROM [dbo].[Order]  WHERE SalesPersonId = @SalesPersonId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetOrdersByShippingMethodId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetOrdersByShippingMethodId]
	@ShippingMethodId INT
AS
BEGIN
	SELECT * FROM [dbo].[Order]  WHERE ShippingMethodId = @ShippingMethodId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetPayments]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPayments]
AS
BEGIN
	SELECT * FROM [dbo].[Payment]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetPaymentsById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetPaymentsById]
    @Id INT
AS
BEGIN
	SELECT * FROM [dbo].[Payment] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetPaymentsByOrderId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetPaymentsByOrderId]
    @OrderId INT
AS
BEGIN
	SELECT * FROM [dbo].[Payment] WHERE OrderId = @OrderId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetPaymentsByPaymentId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetPaymentsByPaymentId]
    @PaymentId INT
AS
BEGIN
	SELECT * FROM [dbo].[Payment] WHERE PaymentId = @PaymentId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetProducts]...';


GO
CREATE PROCEDURE [dbo].[sp_GetProducts]	
AS
BEGIN
	SELECT * FROM [dbo].[Product]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetProductsBrandId]...';


GO

CREATE PROCEDURE [dbo].[sp_GetProductsBrandId]	
@BrandId INT
AS
BEGIN
	SELECT * FROM [dbo].[Product] WHERE BrandId = @BrandId
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetProductsById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetProductsById]	
	@Id INT
AS
BEGIN
	SELECT * FROM [dbo].[Product] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetShippingMethods]...';


GO
CREATE PROCEDURE [dbo].[sp_GetShippingMethods]
AS
BEGIN
	SELECT * FROM [dbo].[ShippingMethod]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetShippingMethodsById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetShippingMethodsById]
	@Id int
AS
BEGIN
	SELECT * FROM [dbo].[ShippingMethod] where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetUsers]...';


GO
CREATE PROCEDURE [dbo].[sp_GetUsers]
AS
BEGIN
	SELECT * FROM [dbo].[User]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetUsersById]...';


GO

CREATE PROCEDURE [dbo].[sp_GetUsersById]
	@Id INT
AS
BEGIN
	SELECT * FROM [dbo].[User] WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetUserTypes]...';


GO
CREATE PROCEDURE [dbo].[sp_GetUserTypes]
AS
BEGIN
	SELECT * FROM [dbo].[UserType]
END
GO
PRINT N'Creating Procedure [dbo].[sp_GetUserTypesById]...';


GO


CREATE PROCEDURE [dbo].[sp_GetUserTypesById]
	@Id int
AS
BEGIN
	SELECT * FROM [dbo].[UserType] where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertAddress]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertAddress]	
	@UserID INT ,
	@Address1 [varchar](250),
	@Address2 [varchar](250),
	@Address3 [varchar](250),	
	@Country [varchar](100),
	@City [varchar](100),
	@Town [varchar](100),
	@AreaCode [varchar](20) 
AS
BEGIN
	INSERT INTO [dbo].[Address] 	
	( 
		[UserID],[Address1],[Address2],[Address3],[Country],[City],[Town],[AreaCode]
	)
	VALUES
	(
		@UserID,@Address1,@Address2,@Address3,@Country,@City,@Town,@AreaCode
	)	
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertBrands]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertBrands]	
	@BrandDescription [varchar](100)
AS
BEGIN
	INSERT INTO [dbo].[Brand]
	( [BrandDescription]) VALUES ( @BrandDescription)	
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertContactDetails]...';


GO


CREATE PROCEDURE [dbo].[sp_InsertContactDetails]
    @UserID INT,
	@ContactTypeId INT,
	@Contact [varchar](250)  
AS
BEGIN
	INSERT INTO [dbo].[ContactDetails]
	( 
		[UserID],[ContactTypeId],[Contact]
	)
	VALUES
	(	
		@UserID,@ContactTypeId,	@Contact  
	)
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertContactTypes]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertContactTypes]	
	@ContactType [varchar](250) 
AS
BEGIN
	INSERT INTO [dbo].[ContactType] 
		(  [ContactType]) 
	VALUES 
		( @ContactType)
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertOrderDetails]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertOrderDetails]	
	@OrderId INT,
	@ProductId INT, 
    @Quantity INT, 
    @UnitPrice FLOAT, 
    @Discount FLOAT
AS
BEGIN
	INSERT INTO [dbo].[OrderDetail] 
	( 
		[OrderId],[ProductId],[Quantity] ,[UnitPrice],[Discount]
	)
	VALUES
	(
		@OrderId,@ProductId,@Quantity,@UnitPrice,@UnitPrice
	)	
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertOrders]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertOrders]	
	@ShippingMethodId INT, 
    @SalesPersonId INT, 
    @CustomerId INT, 
    @OrderDate DATE
AS
BEGIN
	INSERT INTO [dbo].[Order]  
	(
		[ShippingMethodId],	[SalesPersonId],[CustomerId],[OrderDate]	
	)
	VALUES
	(
		@ShippingMethodId,@SalesPersonId,@CustomerId,@OrderDate	
	)	
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertPayments]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertPayments]  
    @OrderId INT, 
    @PaymentId INT, 
    @PaymentAmount FLOAT, 
    @PaymentDate DATE, 
    @CardNumber [varchar](10),
    @CardExpiryDate DATE, 
    @CardHolderName [varchar](100)

AS
BEGIN
	INSERT INTO [dbo].[Payment] 
    (
        [OrderId],[PaymentId],[PaymentAmount],[PaymentDate],[CardNumber],[CardExpiryDate],[CardHolderName]
    )
    VALUES
    (
        @OrderId, @PaymentId, @PaymentAmount, @PaymentDate, @CardNumber, @CardExpiryDate, @CardHolderName
    )   
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertProducts]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertProducts]	
	@BrandId int,
	@ProductName [varchar](100)
AS
BEGIN
	INSERT INTO [dbo].[Product] 
    (
        [BrandId] ,[ProductName]
    )
    VALUES
    (
        @BrandId,@ProductName
    )   
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertShippingMethods]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertShippingMethods]
	@ShippingMethod [varchar](100)
AS
BEGIN
	INSERT INTO [dbo].[ShippingMethod]
	( [ShippingMethod]) VALUES ( @ShippingMethod)	
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertUsers]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertUsers]	
	@Title [varchar](10) ,
	@FirstName [varchar](50) ,
	@LastName [varchar](50) , 
    @DateOfBirth DATE 
AS
BEGIN
	INSERT INTO [dbo].[User]
	( 		
		[Title],[FirstName],[LastName],[DateOfBirth] 		
	)
	VALUES
	(
		@Title,@FirstName,@LastName,@DateOfBirth		
	)
	
END
GO
PRINT N'Creating Procedure [dbo].[sp_InsertUserTypes]...';


GO

CREATE PROCEDURE [dbo].[sp_InsertUserTypes]
	@UserType [varchar](250)
AS
BEGIN
	INSERT INTO [dbo].[UserType]
	( [UserType]) VALUES ( @UserType)	
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateAddress]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateAddress]	
	@Id int,
	@UserID INT ,
	@Address1 [varchar](250),
	@Address2 [varchar](250),
	@Address3 [varchar](250),	
	@Country [varchar](100),
	@City [varchar](100),
	@Town [varchar](100),
	@AreaCode [varchar](20) 
AS
BEGIN
	UPDATE [dbo].[Address] 	
	SET 
		[UserID] = @UserID,
		[Address1] = @Address1,
		[Address2] = @Address2,
		[Address3] = @Address3,
		[Country] = @Country,
		[City] = @City,
		[Town] = @Town,
		[AreaCode] = @AreaCode	
	WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateBrands]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateBrands]
	@Id int,
	@BrandDescription [varchar](100)
AS
BEGIN
	UPDATE [dbo].[Brand] 
		SET [BrandDescription] = @BrandDescription
	where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateContactDetails]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateContactDetails]
	@Id INT, 
    @UserID INT,
	@ContactTypeId INT,
	@Contact [varchar](250)  
AS
BEGIN
	UPDATE [dbo].[ContactDetails]
	SET 
		[UserID] = @UserID,
		[ContactTypeId] = @ContactTypeId,
		[Contact] = @Contact
	
	WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateContactTypes]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateContactTypes]
	@Id INT,
	@ContactType [varchar](250) 
AS
BEGIN
	UPDATE [dbo].[ContactType] 
		SET  [ContactType] = @ContactType
	WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateOrderDetails]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateOrderDetails]
	@Id INT,
	@OrderId INT,
	@ProductId INT, 
    @Quantity INT, 
    @UnitPrice FLOAT, 
    @Discount FLOAT
AS
BEGIN
	UPDATE [dbo].[OrderDetail] 
	SET 
		[OrderId] = @OrderId,
		[ProductId] = @ProductId,
		[Quantity] =  @Quantity,
		[UnitPrice] =  @UnitPrice,
		[Discount] =  @UnitPrice
	WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateOrders]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateOrders]
	@Id INT,
	@ShippingMethodId INT, 
    @SalesPersonId INT, 
    @CustomerId INT, 
    @OrderDate DATE
AS
BEGIN
	UPDATE [dbo].[Order]  
	SET	
		[ShippingMethodId] = @ShippingMethodId,
		[SalesPersonId] =  @SalesPersonId,
		[CustomerId] = @CustomerId,
		[OrderDate] = @OrderDate	
	WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdatePayments]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdatePayments]
    @Id INT, 
    @OrderId INT, 
    @PaymentId INT, 
    @PaymentAmount FLOAT, 
    @PaymentDate DATE, 
    @CardNumber [varchar](10),
    @CardExpiryDate DATE, 
    @CardHolderName [varchar](100)

AS
BEGIN
	UPDATE [dbo].[Payment] 
    SET
        [OrderId] = @OrderId,
        [PaymentId] = @PaymentId,
        [PaymentAmount] = @PaymentAmount,
        [PaymentDate] = @PaymentDate,
        [CardNumber] = @CardNumber,
        [CardExpiryDate] = @CardExpiryDate,
        [CardHolderName] = @CardHolderName
    WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateProducts]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateProducts]	
	@Id INT,	
	@BrandId int,
	@ProductName [varchar](100)
AS
BEGIN
	UPDATE [dbo].[Product] 
    SET
        [BrandId] = @BrandId,
        [ProductName] = @ProductName       
    WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateShippingMethods]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateShippingMethods]
	@Id int,
	@ShippingMethod [varchar](100)
AS
BEGIN
	UPDATE [dbo].[ShippingMethod]
		SET [ShippingMethod] = @ShippingMethod
	where Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateUsers]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateUsers]
	@Id INT,
	@Title [varchar](10) ,
	@FirstName [varchar](50) ,
	@LastName [varchar](50) , 
    @DateOfBirth DATE 
AS
BEGIN
	UPDATE [dbo].[User]
	SET 		
		[Title] = @Title,
		[FirstName] = @FirstName,
		[LastName] = @LastName,
		[DateOfBirth] = @DateOfBirth	
	WHERE Id = @Id
END
GO
PRINT N'Creating Procedure [dbo].[sp_UpdateUserTypes]...';


GO

CREATE PROCEDURE [dbo].[sp_UpdateUserTypes]
	@Id int,
	@UserType [varchar](250)
AS
BEGIN
	UPDATE [dbo].[UserType]
		SET [UserType] = @UserType
	where Id = @Id
END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c096c04b-1f84-40e4-9272-1dd5728849af')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c096c04b-1f84-40e4-9272-1dd5728849af')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a456b604-efcf-41ed-b093-325bdef4d168')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a456b604-efcf-41ed-b093-325bdef4d168')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '200dbdec-54a6-436e-b3f2-c6318c6d15ee')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('200dbdec-54a6-436e-b3f2-c6318c6d15ee')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '381e63cf-07d4-47e4-a5fa-49c2eb9b8f3e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('381e63cf-07d4-47e4-a5fa-49c2eb9b8f3e')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
 

 IF EXISTS (SELECT 1 FROM [dbo].Brand)
 BEGIN
	INSERT INTO [dbo].[Brand]	
	( [BrandDescription]) 
	VALUES	( 'Nike'),	
			( 'Puma'),
			( 'Polo'),
			( 'Adidas'),
			( 'Asics')
 END
GO


 IF EXISTS (SELECT 1 FROM [dbo].[ContactType])
 BEGIN
 INSERT INTO [dbo].[ContactType] 
		(  [ContactType]) 
	VALUES 
		( 'Email'),
		( 'Mobile'),
		( 'Landline'),
		( 'Fax')
 END
GO

  IF EXISTS (SELECT 1 FROM [dbo].[ShippingMethod])
 BEGIN
  INSERT INTO [dbo].[ShippingMethod] 
		(  [ShippingMethod]) 
	VALUES 
		( 'Real-Time'),
		( 'Local Shipping'),
		( 'International Shipping'),
		( 'Same Day Delivery'),
		( 'Overnight Delivery')
 END
GO

  IF EXISTS (SELECT 1 FROM [dbo].[UserType])
 BEGIN
   INSERT INTO [dbo].[UserType] 
		(  [UserType]) 
	VALUES 
		( 'Employee'),
		( 'Customer')
		
 END
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
